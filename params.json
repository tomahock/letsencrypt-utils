{"name":"Letsencrypt-utils","tagline":"Let's Encrypt Utils for nginx integration. Very experimental!","body":"# Let's Encrypt Utils\r\nLet's Encrypt Utils for nginx integration\r\n\r\n## Renew\r\nRenews all certificates that are eligible.\r\n\r\n#### Run\r\n```sh\r\n$ sudo ./renew.sh\r\n```\r\n\r\n#### Crontab\r\nRuns every saturday\r\n``` sh\r\n* * * * 6 /path/to/repo/renew.sh 2>&1\r\n```\r\n\r\n## Create\r\n\r\n#### Run\r\nBefore create a certificate, in order to Let's Encrypt verifies the ownership of the domain you must serve that domain on your server. \r\nAdd this configuration to your nginx\r\n```\r\nserver {\r\n  listen              80;\r\n  listen              [::]:80;\r\n  server_name         letsencrypt.tomahock.com letsencrypt.tomahock.com;\r\n  location '/.well-known/acme-challenge' {\r\n  default_type \"text/plain\";\r\n    root        /tmp/letsencrypt-auto;\r\n  }\r\n\r\n  location / {\r\n    return              301 https://$server_name$request_uri;\r\n  }\r\n}\r\n```\r\n\r\nAfter restart nginx run\r\n```sh\r\n$ sudo ./create.sh domain.com\r\n```\r\n\r\nThe certificates will be in the dir\r\n``` sh\r\n/etc/letsencrypt/live/letsencrypt.tomahock.com\r\n```\r\n\r\n### TODO\r\n* One binary to run them all\r\n* -h heelllppppp\r\n* Better output\r\n* Quite mode for crontab (http://unix.stackexchange.com/a/46801)\r\n* Create nginx configurations\r\n* Go on a space flight\r\n","google":"UA-29689840-4","note":"Don't delete this file! It's used internally to help with page regeneration."}